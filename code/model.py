import tensorflow as tf
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense, Flatten, Reshape

class Discriminator(tf.keras.Model):
    def __init__(self, input_size, num_classes=10, latent_size=15):
        super(Discriminator, self).__init__()
        self.encoder = None
        self.decoder = None

        ############################################################################################
        # TODO: Define encoder                                                                     #               
        #                                                                                          #               
        ############################################################################################
        

        ############################################################################################
        # TODO: Define decoder                                                                     #
        #                                                                                          #
        ############################################################################################
        

        ############################################################################################
        #                                      END OF YOUR CODE                                    #
        ############################################################################################

    def call(self):
        """
        Summary
    
        Inputs:
        - 
        
        Returns:
        - 
        """

        ############################################################################################
        # TODO:                                                                                    #
        ############################################################################################
        

        ############################################################################################
        #                                      END OF YOUR CODE                                    #
        ############################################################################################
        
        pass


def loss_function():
    """
    Summary

    Inputs:
    - 
    Returns:
    - loss:
    """

    loss = []

    ################################################################################################
    # TODO:                                                                                        #
    ################################################################################################
    

    ################################################################################################
    #                            END OF YOUR CODE                                                  #
    ################################################################################################
    
    return loss
